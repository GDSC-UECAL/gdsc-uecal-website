---
import { Image } from "astro:assets";
import Divider from "../../assets/divider.svg";
---

<section
    class="bg-white dark:bg-gray-900 py-24 sm:py-32 flex items-center p-5 justify-center bg-[url(/background.webp)] bg-cover bg-center relative overflow-hidden"
    id="stats">
    <div class="mx-auto max-w-7xl px-8 md:px-24 lg:px-8">
        <div class="mx-auto max-w-6xl md:text-center">
            <h2
                class="text-center lg:text-center text-white font-bold text-4xl sm:text-4xl sm:text-start leading-none mb-6">
                Making tech education accessible to our growing community.
            </h2>
            <p
                class="text-center lg:text-center mt-4 text-xl tracking-tight text-slate-300 dark:text-gray-300">
                In three years, GDSC-UE Caloocan has achieved significant
                growth, with even greater passion, goals, and dreams.
            </p>
        </div>
        <ul
            role="list"
            class="mx-auto mt-16 grid max-w-3xl grid-cols-1 gap-6 sm:gap-8 lg:mt-20 lg:max-w-none lg:grid-cols-3">
            <li>
                <ul role="list" class="flex flex-col gap-y-6 sm:gap-y-8">
                    <li>
                        <figure
                            class="rounded-xl text-center p-6 shadow-md ring-black/5 ring-2 bg-transparent backdrop-filter backdrop-blur-md bg-opacity-5 isolate">
                            <blockquote class="relative p-3">
                                <p
                                    class="text-6xl font-bold tracking-tight from-red-300 via-pink-blue to-violet-300 bg-gradient-to-r bg-clip-text text-transparent stat-number"
                                    data-stat={285}>
                                    285
                                    <span data-symbol class="hidden">+</span>
                                </p>
                            </blockquote>
                            <figcaption class="text-center">
                                <div class="font-bold text-slate-200">
                                    Members
                                </div>
                            </figcaption>
                        </figure>
                    </li>
                </ul>
            </li>
            <li>
                <ul role="list" class="flex flex-col gap-y-6 sm:gap-y-8">
                    <li>
                        <figure
                            class="rounded-xl text-center p-6 shadow-md ring-black/5 ring-2 bg-transparent backdrop-filter backdrop-blur-md bg-opacity-5 isolate">
                            <blockquote class="relative p-3">
                                <p
                                    class="text-6xl font-bold tracking-tight from-red-300 via-pink-blue to-violet-300 bg-gradient-to-r bg-clip-text text-transparent stat-number"
                                    data-stat={25}>
                                    25
                                    <span data-symbol class="hidden">+</span>
                                </p>
                            </blockquote>
                            <figcaption class="text-center">
                                <div class="font-bold text-slate-200">
                                    Events
                                </div>
                            </figcaption>
                        </figure>
                    </li>
                </ul>
            </li>
            <li>
                <ul role="list" class="flex flex-col gap-y-6 sm:gap-y-8">
                    <li>
                        <figure
                            class="rounded-xl text-center p-6 shadow-md ring-black/5 ring-2 bg-transparent backdrop-filter backdrop-blur-md bg-opacity-5 isolate">
                            <blockquote class="relative p-3">
                                <p
                                    class="text-6xl font-bold tracking-tight from-red-300 via-pink-blue to-violet-300 bg-gradient-to-r bg-clip-text text-transparent stat-number"
                                    data-stat={4.8}>
                                    4.8/5
                                    <span data-symbol class="hidden">.8/5</span>
                                </p>
                            </blockquote>
                            <figcaption class="text-center">
                                <div class="font-bold text-slate-200">
                                    Event Rating
                                </div>
                            </figcaption>
                        </figure>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</section>

<div class="flex items-center w-full">
    <Image
        src={Divider}
        alt="Divider"
        class="xl:w-screen flex-grow"
        loading="lazy"
    />
</div>

<script>
    const stateElements = document.querySelectorAll(
        "[data-stat]",
    ) as NodeListOf<HTMLSpanElement>;

    function easeOutCubic(
        elapsed: number,
        initialValue: number,
        amountOfChange: number,
        duration: number,
    ): number {
        return (
            amountOfChange *
                ((elapsed = elapsed / duration - 1) * elapsed * elapsed + 1) +
            initialValue
        );
    }

    const incrementNode = (
        start: number,
        end: number,
        node: HTMLElement,
        duration: number,
        onFinish?: () => void,
    ) => {
        let shouldRun = true;

        let startTimestamp: number | null = null;
        const step = (timestamp: number) => {
            if (!startTimestamp) {
                startTimestamp = timestamp;
            }

            if (!shouldRun) {
                return;
            }

            const progress = Math.min(
                (timestamp - startTimestamp) / duration,
                1,
            );

            const num = easeOutCubic(
                timestamp - startTimestamp,
                start,
                end,
                duration,
            );

            const result = Math.min(Math.floor(num), end);

            node.childNodes[0].textContent = result.toString();

            if (progress < 1 && result < end) {
                window.requestAnimationFrame(step);
            } else {
                onFinish && onFinish();
            }
        };

        window.requestAnimationFrame(step);
    };

    stateElements.forEach((e) => {
        const finalNum = parseInt(e.dataset.stat ?? "0");
        if (isNaN(finalNum)) {
            return;
        }
        let start = 0;
        let end = finalNum;

        const symbol = e.querySelector("[data-symbol]");
        if (symbol) {
            incrementNode(start, end, e, 2000, () => {
                setTimeout(() => {
                    symbol.classList.remove("hidden");
                }, 500);
            });
        } else {
            incrementNode(start, end, e, 2000);
        }
    });
</script>
